# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-04-28 01:35
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Irmafeatures',
            fields=[
                ('datetime', models.DateTimeField(db_column='DateTime', primary_key=True, serialize=False)),
                ('lat', models.FloatField(blank=True, db_column='Lat', null=True)),
                ('lon', models.FloatField(blank=True, db_column='Lon', null=True)),
                ('wind', models.BigIntegerField(blank=True, db_column='Wind', null=True)),
                ('pressure', models.BigIntegerField(blank=True, db_column='Pressure', null=True)),
                ('p_mean', models.FloatField(blank=True, null=True)),
                ('p_min', models.FloatField(blank=True, null=True)),
                ('p_max', models.FloatField(blank=True, null=True)),
                ('p_var', models.FloatField(blank=True, null=True)),
                ('p_std', models.FloatField(blank=True, null=True)),
                ('p_sum', models.FloatField(blank=True, null=True)),
                ('p_count', models.IntegerField(blank=True, null=True)),
                ('storm_type', models.TextField(blank=True, db_column='Storm Type', null=True)),
                ('category', models.IntegerField(blank=True, db_column='Category', null=True)),
            ],
            options={
                'db_table': 'irmaFeatures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kloutids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('screen_name', models.CharField(max_length=250)),
                ('klout_id', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'kloutIDs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Precpsirma',
            fields=[
                ('datetime', models.DateTimeField(db_column='DateTime', primary_key=True, serialize=False)),
                ('mean', models.FloatField(blank=True, null=True)),
                ('min', models.FloatField(blank=True, null=True)),
                ('max', models.FloatField(blank=True, null=True)),
                ('var', models.FloatField(blank=True, null=True)),
                ('std', models.FloatField(blank=True, null=True)),
                ('sum', models.FloatField(blank=True, null=True)),
                ('count', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'precpsIrma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tweetcoords',
            fields=[
                ('tweet_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('text', models.TextField(blank=True, null=True)),
                ('user_id', models.CharField(max_length=100)),
                ('coordinates', models.TextField(blank=True, null=True)),
                ('location_coordinates', models.TextField(blank=True, null=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('place_id', models.CharField(blank=True, max_length=100, null=True)),
                ('image_url', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('hashtags', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tweetCoords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tweetfeatures',
            fields=[
                ('tweet_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('has_image', models.IntegerField(blank=True, null=True)),
                ('has_hashtags', models.IntegerField(blank=True, null=True)),
                ('has_url', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tweetFeatures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tweetirmatimes',
            fields=[
                ('tweet_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('irmatime', models.DateTimeField(db_column='irmaTime')),
            ],
            options={
                'db_table': 'tweetIrmaTimes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tweetscores',
            fields=[
                ('tweetid', models.CharField(db_column='tweetID', max_length=100, primary_key=True, serialize=False)),
                ('tweetscore', models.FloatField(db_column='tweetScore')),
                ('textscore', models.FloatField(db_column='textScore')),
                ('imagescore', models.FloatField(db_column='imageScore')),
                ('gisscore', models.FloatField(db_column='gisScore')),
            ],
            options={
                'db_table': 'tweetScores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Twitterusers',
            fields=[
                ('user_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('screen_name', models.CharField(max_length=100)),
                ('location', models.TextField(blank=True, null=True)),
                ('verified', models.IntegerField()),
                ('followers_count', models.IntegerField()),
                ('friends_count', models.IntegerField()),
                ('statuses_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('klout_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'twitterUsers',
                'managed': False,
            },
        ),
    ]
